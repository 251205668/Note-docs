(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{84:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git总结"}},[t._v("#")]),t._v(" Git总结")]),t._v(" "),a("h2",{attrs:{id:"图例概览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#图例概览"}},[t._v("#")]),t._v(" 图例概览")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://image.yangxiansheng.top/img/git%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8.jpg?imagelist",target:"_blank",rel:"noopener noreferrer"}},[t._v("原图"),a("OutboundLink")],1),t._v(" "),a("img",{attrs:{src:"https://image.yangxiansheng.top/img/git%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8.jpg?imagelist",alt:""}})]),t._v(" "),a("p",[a("a",{attrs:{href:"https://image.yangxiansheng.top/img/linux%E5%91%BD%E4%BB%A4.jfif?imagelist",target:"_blank",rel:"noopener noreferrer"}},[t._v("原图"),a("OutboundLink")],1),t._v(" "),a("img",{attrs:{src:"https://image.yangxiansheng.top/img/linux%E5%91%BD%E4%BB%A4.jfif?imagelist",alt:""}})]),t._v(" "),a("h2",{attrs:{id:"git安装及配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git安装及配置"}},[t._v("#")]),t._v(" git安装及配置")]),t._v(" "),a("ol",[a("li",[t._v("设置git仓库的用户名，email")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  -- global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yourname'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config  -- global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'youremail'")]),t._v("\n")])])]),a("p",[t._v("还可以配置本地的用户名，email ，"),a("strong",[t._v("本地的用户名密码权重比全局要高")]),t._v("，当初始化完成，本项目的用户名邮箱会做本更")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n")])])]),a("p",[t._v("查看当前用户的配置信息")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --list --local or --lobal\n")])])]),a("p",[t._v("打印结果:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://image.yangxiansheng.top/img/git1.png?imagelist",alt:""}}),t._v("\n2. 初始化一个git仓库的命令")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" project\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n\nor \n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init myproject\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("配置免密ssh")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("配置公私钥，如果已经配置过ssh key需要备份")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/.ssh\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" key_backup\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cp")]),t._v(" id_rs a*key_backup\n")])])]),a("p",[t._v(":::")]),t._v(" "),a("p",[a("strong",[t._v("生成sshkey")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ ssh-keygen -t rsa C "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"251205668@qq.com"')]),t._v("  需要输入密码 生成的公钥私钥会放在.ssh文件下\n\n公钥.pub文件粘贴进github网站key\n")])])]),a("p",[t._v("连接github")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ ssh git@github.com   --连接成功后显示\n")])])]),a("p",[a("img",{attrs:{src:"https://image.yangxiansheng.top/img/QQ%E6%88%AA%E5%9B%BE20200228140352.png?imagelist",alt:""}}),t._v("\n4. .git文件目录")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("---HEAD   告诉我们git当前所处分支\n---config 记录user信息\n---refs   记录分支信息和标签信息\n\n")])])]),a("h2",{attrs:{id:"git一般的使用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git一般的使用命令"}},[t._v("#")]),t._v(" git一般的使用命令")]),t._v(" "),a("ul",[a("li",[t._v("首次提交")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'responity path'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])])]),a("ul",[a("li",[t._v("最简单的提交方式")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(". -u -A 都是处理全部的变更 +filename是对单文件或多文件的变更处理"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("此处不能出现变更文件名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master 当前分支推送远程仓库master\n")])])]),a("ul",[a("li",[t._v("更换分支常规的提交")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("远程仓库新建分支\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge origin/test\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master -u第一次推送，后面省去\n\n推送分支进远程分支不是主分支的话 要合并起来 不然会警告\n\n")])])]),a("h2",{attrs:{id:"git命令合集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git命令合集"}},[t._v("#")]),t._v(" git命令合集")]),t._v(" "),a("h3",{attrs:{id:"文件操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#文件操作"}},[t._v("#")]),t._v(" 文件操作")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" file1 flie2 --重命名文件file1，git自动add\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" fileName    --删除文件,自动add进暂存\n\n")])])]),a("h3",{attrs:{id:"git状态显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git状态显示"}},[t._v("#")]),t._v(" git状态显示")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status  查看当前分支信息和变更情况\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log     查看当前分支的版本commit情况\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -1  查看第一条commit的情况\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog  显示当前分支的最近几次提交\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  显示某次提交时，某个文件的内容\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  显示某次提交的元数据和内容变化\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show --name-only "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("commit"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  显示某次提交发生变化的文件\n\n")])])]),a("h3",{attrs:{id:"分支操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支操作"}},[t._v("#")]),t._v(" 分支操作")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 显示")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -av 列出所有分支有具体commit信息\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -r 列出远程分支名\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch branchname  基于当前分支创建分支\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 重命名本地分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("old-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("new-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改远程分支名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -m oldBranch newBranch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin: oldBranch\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --set-upstream origin new_branch\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 强制删除分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支(先在本地删除该分支)，原理是把一个空分支push到server上，相当于删除该分支。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# !!!切分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout branchName  切换到该分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b branchName master 基于master分支创建分支，并切换到该分支\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 本地工作区,并未commit的回滚")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" filename 撤销工作区的修改\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("head")]),t._v(" 撤销所有文件的修改\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 撤销某个文件提交")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HEAD --fileName 撤销暂存区内容 撤销暂存区内容\n然后再 "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD 将工作区和暂存区恢复成头指针状态 全部撤销\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard head^^ 复位到head之前的版本\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset head~1 撤销一条记录 编辑commit编辑\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回滚代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log 查看提交历史\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" resset --hard log里面的哈希值 -回滚代码\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reflog 查看本地所有的操作历史\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard head^ 回滚到上一次提交\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 暂时存放修改的文件 一般用于没写完代码但是要工作另一部分的代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash 将工作区暂存进堆栈\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" statsh apply 暂存空间取出来 并不删除堆栈记录\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop 删除堆栈记录\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 比较差异")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" HEAD HEAD^ 对比当前commit和父级commit区别\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" 比较工作区和暂存区差异\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --fileName 文件工作区和暂存区差异\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" branch1 branch2 比较分支差异\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" branch1 branch2 --flieName 比较文件\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 修改commit信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -amend 对最近提交的coomit的message变更\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),t._v("  添加所有修改文件到暂存区，并提交版本库"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("不包括新增文件"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 推送")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master 第一次推送\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f origin master 强制推送\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -all origin master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'仓库地址'")]),t._v(" master\n\n")])])]),a("blockquote",[a("p",[t._v(".gitignore常见用法")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v(".DS_Store  .DS_Store结尾文件或目录忽略管理\n\nnode_modules/\n\ndist/       dist文件夹下面的文件忽略关理,但是文件夹会管理\n\n* .idea     所有结尾是.idea文件忽略管理\n.vscode\n\n")])])]),a("h2",{attrs:{id:"多人协作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多人协作"}},[t._v("#")]),t._v(" 多人协作")]),t._v(" "),a("p",[a("strong",[t._v("git flow工作流")])]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch 查看本地分支\n\n在公司无权限推送master分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b dev master -master 分支创建分支\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status 查看文件记录\n\n一位成员修改一份文件,然后推送,另一位同学同时修改这份文件,提交会被拒绝\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" pull origin dev 拉取远程的dev分支,但是此时会有冲突，因为双方都修改了文件\n\n解决冲突\n\n推送\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin dev\n\n选择性拉取远程分支内容"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("常用场景,不想合并全部分支"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin dev\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge FETCH-HEAD 上面拉取的后面的变量\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin feature:feature 前面是本地分支 后面是远程的分支,自定义命名\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch\n\n拉取远程分支 然后把内容输入到dev分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin feature:dev\n\n\n")])])]),a("p",[t._v("两种工作流\n预定三个分支:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("dev    预发布分支\nfetaure 开发分支\nmaster  发布分支\n\n\n首先切换到dev分支\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout dev\n\n合并开发\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge feature\n\n发布\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge dev\n\n打上版本标签推送\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v1.0.0\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master --tags\n\n删除tag\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d v1.0.0\n\n列出tag\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag --list\n\n\n删除远程分支或者tag\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :refs/tags/v1.0.0\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin :远程分支\n\n删除本地分支\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -D 分支\n\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);